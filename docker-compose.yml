services:
  # Main application server
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://admin:password@postgres:5432/serverdb
      - REDIS_URL=redis://redis:6379
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ./server:/app/server
      - ./infrastructure:/app/infrastructure
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
      - prometheus
    networks:
      - server-network

  # Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=serverdb
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - server-network

  # Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - server-network

  # Message queue
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - server-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - server-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - server-network

  # MCP Servers
  mcp-filesystem:
    build: ./mcp-servers/filesystem
    ports:
      - "8001:8001"
    volumes:
      - ./:/workspace
    networks:
      - server-network

  mcp-aws:
    build: ./mcp-servers/aws
    ports:
      - "8002:8002"
    environment:
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ~/.aws:/root/.aws:ro
    networks:
      - server-network

  mcp-code-analysis:
    build: ./mcp-servers/code-analysis
    ports:
      - "8003:8003"
    networks:
      - server-network

  mcp-monitoring:
    build: ./mcp-servers/monitoring
    ports:
      - "8004:8004"
    networks:
      - server-network

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3001:3001"
    networks:
      - server-network

  # Reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - server-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data:

networks:
  server-network:
    driver: bridge
